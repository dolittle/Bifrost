<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{ECE4A786-79A8-4CA1-BE16-E8E961CAA505}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Bifrost.Client.Specs</RootNamespace>
    <AssemblyName>Bifrost.Client.Specs</AssemblyName>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\Solutions\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <UseVSHostingProcess>false</UseVSHostingProcess>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <UseVSHostingProcess>false</UseVSHostingProcess>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Castle.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=407dd0808d44fbdc, processorArchitecture=MSIL">
      <HintPath>..\Solutions\packages\Castle.Core.4.0.0\lib\net45\Castle.Core.dll</HintPath>
    </Reference>
    <Reference Include="Machine.Specifications, Version=0.11.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\Solutions\packages\Machine.Specifications.0.11.0\lib\net45\Machine.Specifications.dll</HintPath>
    </Reference>
    <Reference Include="Machine.Specifications.Should, Version=0.11.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\Solutions\packages\Machine.Specifications.Should.0.11.0\lib\net45\Machine.Specifications.Should.dll</HintPath>
    </Reference>
    <Reference Include="Moq">
      <HintPath>..\Solutions\packages\Moq.4.2.1409.1722\lib\net40\Moq.dll</HintPath>
    </Reference>
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Runtime.Remoting" />
    <Reference Include="System.Windows" />
    <Reference Include="System.Xaml" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Serialization" />
    <Reference Include="WindowsBase" />
  </ItemGroup>
  <ItemGroup Condition=" '$(OS)' == 'Windows_NT' ">
    <Compile Include="Commands\for_CommandForProxies\given\all_dependencies.cs" />
    <Compile Include="Commands\for_CommandForProxies\InterfaceForCommand.cs" />
    <Compile Include="Commands\for_CommandForProxies\MyCommand.cs" />
    <Compile Include="Commands\for_CommandForProxies\ProxyType.cs" />
    <Compile Include="Commands\for_CommandForProxies\when_getting_for_command_instance.cs" />
    <Compile Include="Commands\for_CommandForProxies\when_getting_for_command_type.cs" />
    <Compile Include="Commands\for_CommandForProxyInterceptor\given\all_dependencies.cs" />
    <Compile Include="Commands\for_CommandForProxyInterceptor\given\a_known_method.cs" />
    <Compile Include="Commands\for_CommandForProxyInterceptor\MyCommand.cs" />
    <Compile Include="Commands\for_CommandForProxyInterceptor\when_getting_instance.cs" />
    <Compile Include="Commands\for_CommandForProxyInterceptor\when_setting_value_for_property_on_command_instance.cs" />
    <Compile Include="Commands\for_CommandForProxyInterceptor\when_getting_value_from_property_on_command_instance.cs" />
    <Compile Include="Commands\for_CommandInvocationHandler\Command.cs" />
    <Compile Include="Commands\for_CommandInvocationHandler\when_executing.cs" />
    <Compile Include="Commands\for_CommandProxyInstance\given\callbacks_for_all_conditions.cs" />
    <Compile Include="Commands\for_CommandProxyInstance\when_processing_failed_command.cs" />
    <Compile Include="Commands\for_CommandProxyInstance\when_processing_successful_command.cs" />
    <Compile Include="Execution\for_Promise\when_adding_failed_callback_after_it_has_failed.cs" />
    <Compile Include="Execution\for_Promise\when_adding_continuation_callback_after_it_has_been_signaled.cs" />
    <Compile Include="Execution\for_Promise\when_failing_with_error_ballback.cs" />
    <Compile Include="Execution\for_Promise\when_signalling_with_continuation_ballback.cs" />
    <Compile Include="Interaction\for_CommandForMethod\IViewModel.cs" />
    <Compile Include="Interaction\for_CommandForMethod\ViewModel.cs" />
    <Compile Include="Interaction\for_CommandForMethod\when_asking_if_can_execute_with_method_with_one_parameter_and_value_converter.cs" />
    <Compile Include="Interaction\for_CommandForMethod\when_can_execute_property_changes_with_notification.cs" />
    <Compile Include="Interaction\for_CommandForMethod\when_asking_if_can_execute_with_property.cs" />
    <Compile Include="Interaction\for_CommandForMethod\when_asking_if_can_execute_with_method_with_one_parameter.cs" />
    <Compile Include="Interaction\for_CommandForMethod\when_asking_if_can_execute_with_method_without_parameters.cs" />
    <Compile Include="Interaction\for_CommandForMethod\when_executing_command_that_can_execute_with_argument_and_value_converter.cs" />
    <Compile Include="Interaction\for_CommandForMethod\when_executing_command_that_can_execute_with_arguments.cs" />
    <Compile Include="Interaction\for_CommandForMethod\when_initializing_with_can_execute_property_returning_non_bool.cs" />
    <Compile Include="Interaction\for_CommandForMethod\when_initializing_with_can_execute_method_with_more_than_one_parameter.cs" />
    <Compile Include="Interaction\for_CommandForMethod\when_initializing_with_can_execute_method_returning_non_bool.cs" />
    <Compile Include="Interaction\for_CommandForMethod\when_initializing_with_can_execute_when_method_or_property_that_does_not_exist.cs" />
    <Compile Include="Interaction\for_CommandForMethod\when_executing_command_that_can_execute_without_arguments.cs" />
    <Compile Include="Interaction\for_CommandForMethod\when_initializing_with_method_with_more_than_one_parameter.cs" />
    <Compile Include="Interaction\for_CommandForMethod\when_initializing_with_method_that_does_not_exist.cs" />
    <Compile Include="Messaging\for_Messenger\SomeMessage.cs" />
    <Compile Include="Messaging\for_Messenger\SomeOtherMessage.cs" />
    <Compile Include="Messaging\for_Messenger\when_publishing_message_with_two_subscribers_for_different_messages.cs" />
    <Compile Include="Messaging\for_Messenger\when_publishing_message_with_two_subscribers.cs" />
    <Compile Include="Reflection\for_Interceptor\InterceptorWithHandler.cs" />
    <Compile Include="Reflection\for_Interceptor\InterceptorWithoutHandlers.cs" />
    <Compile Include="Reflection\for_Interceptor\when_intercepting_without_handlers.cs" />
    <Compile Include="Reflection\for_Interceptor\when_intercepting_with_one_handler_that_can_handle.cs" />
    <Compile Include="Reflection\for_InvocationHandler\given\an_invocation.cs" />
    <Compile Include="Reflection\for_InvocationHandler\ImplementationNeedingProxyInstance.cs" />
    <Compile Include="Reflection\for_InvocationHandler\ImplementationNeedingTargetInstanceWithWrongType.cs" />
    <Compile Include="Reflection\for_InvocationHandler\ImplementationNeedingTargetInstance.cs" />
    <Compile Include="Reflection\for_InvocationHandler\Implementation.cs" />
    <Compile Include="Reflection\for_InvocationHandler\Interface.cs" />
    <Compile Include="Reflection\for_InvocationHandler\when_asking_if_it_can_handle_for_supported_type.cs" />
    <Compile Include="Reflection\for_InvocationHandler\when_asking_if_it_can_handle_for_unsupported_type.cs" />
    <Compile Include="Reflection\for_InvocationHandler\when_handling_getting_property_value.cs" />
    <Compile Include="Reflection\for_InvocationHandler\when_handling_a_method_invocation_with_two_arguments.cs" />
    <Compile Include="Reflection\for_InvocationHandler\when_handling_on_implementation_that_needs_proxy_instance.cs" />
    <Compile Include="Reflection\for_InvocationHandler\when_handling_on_implementation_that_needs_target_instance_but_has_wrong_type.cs" />
    <Compile Include="Reflection\for_InvocationHandler\when_handling_on_implementation_that_needs_target_instance.cs" />
    <Compile Include="Tasks\for_TaskContext\given\a_task_context_with_a_task_and_associated_data.cs" />
    <Compile Include="Tasks\for_TaskContext\when_cancelling_a_task_before_cancelled_and_completed_callback_registered.cs" />
    <Compile Include="Tasks\for_TaskContext\when_cancelling_a_task_after_cancelled_and_completed_callback_registered.cs" />
    <Compile Include="Tasks\for_TaskContext\when_failing_a_task_before_failed_and_completed_callback_registered.cs" />
    <Compile Include="Tasks\for_TaskContext\when_succeeding_a_task_before_succeeded_and_completed_callback_registered.cs" />
    <Compile Include="Tasks\for_TaskContext\when_succeeding_a_task_after_succeeded_and_completed_callback_registered.cs" />
    <Compile Include="Tasks\for_TaskContext\when_failing_a_task_after_failed_and_completed_callback_registered.cs" />
    <Compile Include="Tasks\for_Tasks\when_executing_task_that_finishes.cs" />
    <Compile Include="Tasks\for_Tasks\when_executing_task.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Bifrost.Client\Bifrost.Client.csproj">
      <Project>{29bd2efc-79de-4b45-bc4e-a049e6cf243f}</Project>
      <Name>Bifrost.Client</Name>
    </ProjectReference>
    <ProjectReference Include="..\Bifrost\Bifrost.csproj">
      <Project>{fb310720-cd89-44b6-bd54-7861f65d8466}</Project>
      <Name>Bifrost</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Properties\" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>